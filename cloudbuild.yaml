steps:
  # Step 1: Restore, Build and Pack the project (creates .nupkg in nupkgs/)
  - name: 'mcr.microsoft.com/dotnet/sdk:7.0'
    id: 'Build and Pack'
    entrypoint: bash
    args:
      - -c
      - |
        dotnet restore MyApp.csproj
        dotnet build MyApp.csproj -c Release
        dotnet pack MyApp.csproj -c Release -o nupkgs
        ls -l nupkgs

  # Step 2: Upload the generated .nupkg file(s) to GCS bucket my-dotnet-packages
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Upload NuGet Package to GCS'
    entrypoint: bash
    args:
      - -c
      - |
        gsutil cp nupkgs/*.nupkg gs://my-dotnet-packages/

  # Step 3: Create Artifact Registry Docker repo if not exists
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Create Artifact Registry repo if not exists'
    entrypoint: bash
    args:
      - -c
      - |
        set -e
        REPO_EXISTS=$(gcloud artifacts repositories list --location=asia-south1 --format="value(NAME)" --filter="NAME=dotnet-repo" || echo "")
        if [ -z "$REPO_EXISTS" ]; then
          echo "Creating Artifact Registry repository dotnet-repo"
          gcloud artifacts repositories create dotnet-repo \
            --repository-format=docker \
            --location=asia-south1 \
            --description="Docker repo for .NET app"
        else
          echo "Artifact Registry repository dotnet-repo already exists, skipping creation."
        fi

  # Step 4: Build Docker image
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Build Docker Image'
    args:
      [
        'build',
        '-t',
        'asia-south1-docker.pkg.dev/onyx-antler-459216-j6/dotnet-repo/myapp:latest',
        '.'
      ]

  # Step 5: Push image to Artifact Registry
  - name: 'gcr.io/cloud-builders/docker'
    id: 'Push Docker Image'
    args:
      [
        'push',
        'asia-south1-docker.pkg.dev/onyx-antler-459216-j6/dotnet-repo/myapp:latest'
      ]

  # Step 6: Deploy to Cloud Run with unauthenticated access
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    id: 'Deploy to Cloud Run'
    args:
      [
        'gcloud', 'run', 'deploy', 'dotnet-app',
        '--image', 'asia-south1-docker.pkg.dev/onyx-antler-459216-j6/dotnet-repo/myapp:latest',
        '--region', 'asia-south1',
        '--platform', 'managed',
        '--allow-unauthenticated',
        '--port', '8080'
      ]

images:
  - asia-south1-docker.pkg.dev/onyx-antler-459216-j6/dotnet-repo/myapp:latest

options:
  logging: CLOUD_LOGGING_ONLY
